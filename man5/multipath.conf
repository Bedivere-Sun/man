名称：
	multipath.conf - 多路径服务配置文件

说明：
	multipath.conf是多路径服务的配置文件。它用于重写multipathd的内建配置表。
	文件中以‘#’开头的一行被视为注释行，空行会直接忽略。

配置语法：
	配置文件的条目形如以下格式：

	<段> {
                     <属性> <键值>
                     ...
                     <子段> {
                            <属性> <键值>
                            ...
                     }
              }

	每一个段包含一个或多个属性或子段。每一个段的属性与其子段的识别均取决于段所关联的关键词。段的关键词有如下这些：

	defaults
		用于为空值属性指定一个值
	blacklist
		用于指定多路径拓扑探测中无需包含的项目
	blacklist_exception
		用于为多路径拓扑探测中增加指定的设备。需要注意的是，即便是blacklist已列出的设备，
		如果有指定也会被包含。
	multipaths
		用于定义多路径拓扑结构。其拓扑结构以wwid为索引，该索也是uid_attribute关键词对uuid的赋值。
	device
		配置指定设备的设置

defaults 部分：
	defaults段有以下关键词可用于定义属性和子段：

	polling_interval
		定义各条路径检查的时间间隔，单位：秒。对于正常路径检查而言，此设置会直接增加到max_polling_interval中。
		默认值：5秒
	max_polling_interval
		定义各条路径检查的最大时间间隔，单位：秒。默认值： 4 * polling_interval。
	multipath_dir
		指定动态存储对象保存的位置。默认值随系统的不同而有所区别，通常为 /lib/multipath
	find_multipaths
		值为yes时,则会尝试为每一个未列为黑名单的路径chaungjian一个多路径设备。如果存在以下三个之中的任一情形时，
		multipath将只创建一个设备块：
			1、同一wwid有至少两条未列为黑名单的路径。
			2、用户手动强制在multipath设备上创建多路径服务。
			3、一条路径与某个已经通过find_multipaths创建的设备块有相同的wwid（即便该设备块当前已不存在）。
		当某一设备创建时find_multipaths设置为yes，则multipath会记录该设备的wwid，故一旦发现相同wwid的路径就会
		自动再创建此设备。这样做的好处是任何多路径用户均可自动选择正确的路径创建目标设备，而不用在blacklist中配置
		复杂的规则。
		默认值：no
	verbosity
		设置默认冗余等级。冗余等级随此值增加而提升。有效值范围：0～6。默认值：2
	reassign_maps
		开启设备device-mapper的重分配映射（可以参考device mapper）。当值为yes时，multipathd将重新映射所有已存
		在设备以保证映射目标总会是指向一个多路径的实际设备而不是候选块设备。取值为yes或no。默认值：yes
	path_selector
		选择默认的路径选择算法。内核多路径目标提供三个可选的算法。
			round-robin 0
				循环遍历路径组的每条路径并向每条路径发送相同的IO数据量。
			queue-length 0
				以最少的IO数量发送下一组IO
			service-time 0
				根据吞吐量以及未完成的IO数量选择下一组IO路径。
	path_grouping_policy
		为未指定多路径配置默认路径分组策略。 有以下值可选择：
			failover
				每个路径一个策略组
			multibus
				所有路径均在一个策略组
			group_by_serial
				每个序列号一个策略组
			group_by_prio
				每个优先级一个策略组。优先级在文件指定为全局、每一控制器或多路径选项的调用程序确定。
			group_by_node_name
				每一目标节点名一个策略组。可用的目标节点均会被记录在 
				/sys/class/fc_transport/target*/node_name
		默认值： failover
	uid_attributer
		udev属性提供一个唯一的路径标识符
	prio
		路径优先级例程名。被指定的例程应会返回一个数值以表示其路径的优先级。数值越高期优先级便越高。none值也是合法的。
		目前已经实现的优先级例程如下：
			const
				永远返回1的优先级
			emc
				为ECM阵列生成路径优先级
			alua
				根据SCSI-3 ALUA设定值生成路径优先级。这个优先权接受额外的prio_arg和exclusive参数。
			ontap
				为NetApp阵列生成路径优先级
			rdac
				为LSI/Enfenio/NetApp的E系列RDAC控制器生成路径优先级
			hp/sw
				为康柏/惠普的活动/备用模式的控制器生成路径优先级
			hds
				为Hitachi HDS 存储阵列单元生成路径优先级
			random
				创建一个1至10之间的任意优先级
			weightedpath
				根据正则和prio_args关键词生成相应的路径优先级
			默认值：const
	rgs
		设置了向prio函数传递的参数。这个关键词只用于特定优先权
			weighted
				需要形如<hbtl|devname|wwn>的<regex1> <prio1> <regex2> <prio2> ...这样的一组值。
				hbtl可以是SCSI的 H:B:T:L格式，比如：1:0:.:., *:0:0:.
				devname是设备名的格式，如：sda, sd.e
				wwn则是host_wwwn:host_wwpn:target_wwnn:target_wwpn的格式。这个值可以通过sysfs或运行multipathd
				获得。其显示路径格式为 %N:%R:%n:%r。如：
				0x200100e08ba0aea0:0x210100e08ba0aea0:.*:.* , .*:.*:iqn.2009-10.com.redhat.msp.lab.ask-06:.*
			alua
				如果事先设置了exclusive_pref_bit的值，TPGS路径会一直处于其自己的路径组内。
	features
		设置使用的设备映射器特性。语法是一组0至6个特性编号。这些特性数列可以是如下值：
			queue_if_no_path
				如果没有活动路径则为IO队列；此特性与no_path_retry关键词等同
			pg_init_retries
				设置尝试pg_init的尝试次数，必须为1至50之间的一个数
			pg_init_delay_msecs
				指定尝试pg_init前先执行多少次msecs，必须为0至60000之间的一个数
	path_checker
		设置默认检测路径状态的方法。可用值有如下这些：
			readsector0 （不推荐）读取设备第一扇区。不推荐你选择这个操作，你可以选择directio
		tur
			对设备发出一个TEST UNIT READY指令
		emc_clariion
			通过对EMC Clariion查询特定的EVPD页 0xC0进而获取路径状态
		hp_sw
			通过检查HP存储阵列固件Active/Standby获取路径状态
		rdac
			检查LSI/Engenio/NetApp E系列的RDAC存储控制器的路径状态
		directio
			直接通过I/O读取第一扇区
		none
			不检查，直接反馈使用sysfs的返回值
		rbd
			检查路径是否位于CEPH黑名单中
		默认值：directio
	failback
		告诉multipathd如何做选择自动回退的方式。
		immediate
			立即回退至有活动路径的最高优先权路径组
		manual
			不做任何自动回退处理
		followover
			只有路径组中第一个路径激活时才执行自动回退。这将在其它节点请求故障转移时返回失败时保留节点。
		values > 0
			设置延迟故障时间。单位：秒
		默认值： manual
	rr_min_io
		设置相同路径组下一跳前可对该路径路由的IO数量。这只用于基于基础输入输出的multipath。默认值：1000
	rr_min_io_rq
		设置相同路径组下一跳前可对该路径路由的IO请求数。这只用于基于请求的multipath。默认值：1
	rr_weight
		如果设置了优先级，multipath配置器将会分配路径一个权重值，该值的计算方式为路径的prio值与rr_min_io的乘积。
		其值为优先级或统一值。默认为统一值。
	no_path_retry
		指定到队列禁用或不停止队列中无队列前重试的次数。默认值：0
	user_friendly_names
		如设置为yes，则通过/etc/multipath/bindings为多路径绑定一个持久且唯一的别名，格式为mpath<n>。若设置为no，
		则将wwid设置为别名。若为either，则选择任意一个别名。默认值：no
	flush_on_last_del
		若设置为yes，multipathd将对已删除的设备禁用队列。默认值：no
	max_fds
		指定由multipath和multipathd可以开启的最大文件描述符的数量。等同于-n。通常max值在系统限定最大值在
		/proc/sys/fs/nr_open中设置。如果没有设置，则该值将从正被调用的进程中的fds最大值。通常为1024。
		出于安全起见，如果数值大于1024，则此属性值最大不应超过最大路径数+32。
	checker_timeout
		指定路径检查优先排序的超时时间，单位：秒。默认值从/sys/block/sd<x>/device/timeout中获取。
	fast_io_fail_tmo
		指定scsi层检测到光纤远程端口错误后延时多久后再向设备发送IO错误。该值应小于dev_loss_tmo的值。
		设置为off可以关闭此延时。
	dev_loss_tmo
		指定scsi层检测到光纤远程端口错误后延时多久后将其从系统中移除。该值最大为2147483647，单位：秒，即68年。
		该值也可以设置为"infinity"，数值被自动解析为2147483647。如果配置了no_path_retry且重试间隔比
		dev_loss_tmo长，数值将被自动调整为no_path_retry与polling_interval的乘积。
		如果未设置fast_io_fail_tmo，则Linux内核会将其限制为600。
	queue_without_daemon
		如果设置为no， 当停止multipathd时，所有设备队列均会关闭。 这个设置对设置了no_path_retry的设备非常有用。
		如果机器关闭则所有路径均关闭。如果到设备的所有路径都关闭时，机器也将会被关闭，如此则可以在多路径停止之后挂起
		等待IO从设备返回。如果没有启动multipathd，访问路径将不会被保存，内核也不会被告知要停止当前正在进行的IO队列。
		你可以通过设置queue_without_daemon为no以避免以上问题发生。
		默认值：no
	bindings_file
		这里要指定bind文件的完整路径名。这个选项仅限设置了user_friendly_names选项。 
		默认指向 /etc/multipath/bindings
	wwids_file
		这里要指定wwids文件的完整路径名，用于追踪此前创建的多路径设备的LUN和wwid。默认指向 /etc/multipath/wwids
	prkeys_file
		这里要指定prkeys文件的完整路径名。当已设置保留密钥文件，则此选项用于追踪指定wwid的保留密钥。
		默认指向 /etc/multipath/prkeys
	log_checker_err
		如果设置为once, 则multipathd的第一个路径检查错误的日志等级为2，之后的错误则以日志等级3的方式记录直至设备恢复。
		如果设置为always，multipathd将把所有日志都以日志等级为2记录。默认值：always。
	reservation_key
		这是用于mpathpersist服务激活的保留密钥。它必须设置给所有使用持久保留功能的多路径设备，且它必须与
		PERSISTENT RESERVE OUT参数列表的RESERVATION KEY字段相同，该参数列表包含应用程序客户端向设备服务器提供
		的8字节值，以标识I_T连接。
		你也可以选择设置指向一个文件，该文件将保存自mpathpersist注册到prkeys_file指定文件中的RESERVATION KEY字段。
	retain_attached_hw_handler
		如果设置为yes且scsi层已对设备附上一个硬件处理器。multipath不会强制通过mutipath.conf对指定的设备使用硬件
		处理器。如果scsi层没有附上硬件处理器，则multipath将继续用其配置好的硬件处理器。默认值：no
	detect_prio
		如果设置为yes，则multipath将探测是否设备支持ALUA。如果支持，则设备将自动使用ALUA优先级排序器。
		如果设置为no，则按普通优先级排序器选用。
		默认值：no
	detect_checker
		如果设置为yes， 则用户设备配置的厂商、产品和修订参数将与内置设备配置进行字符串匹配，以确定是否应该修改现有配置
		或创建新配置。如果设置为no，则用户设备的配置均以匹配的的正则表达式来配置。默认值：no
	hw_str_match
		如果设置为yes，则用户设备配置的vendor、product和revision将与内置字符做匹配以确定是需要新建还是修改配置。
		如果设置为no，则用户配置将作为与内置配置相匹配的正则表达式。默认值：no
	force_sync
		如果设置为yes，则multipathd将只以同步模式调用路径检查。同步模式表示同一时间内只运行一个检测器。
		这在multipathd并行运行多路径检查给CPU带来显著压力时非常有用。默认值：no
	deferred_remove
		如果设置为yes，最后一条路径被删除后multipathd将做差分删除而不是正则删除。这意味着如果设备正被使用，则等到最
		后一个用户将其关闭后才释放。如果路径在最后一个用户关闭前又被添加进来时，差分删除将被取消。默认值：no
	config_dir
		只要不为""，multipath将查询此路径下所有以“.conf”结尾的文件，并将这些文件的内容作为配置信息读取。这些配置信息
		都将被视作是/etc/multipath.conf文件的一部分。config_dir必须是“”或完整有效的路径名。
		默认值：/etc/multipath/conf.d
	delay_watch_checks
		如果值大于0，multipathd将会监视所有状态刚变为有效的路径。如果在这之后他们再次失效后又变为有效，
		那么在下次delay_wait_checks时间后该路径才会被认为有效。
	delay_wait_checks
		如果值大于0，则当设备经过delay_watch_check检查有效后又失效的，都将被标记这样一个延迟值，延迟值后能通过
		delay_watch_check检查有效的才会被启用。默认值：no
	missing_udev_wait_timeout
		控制multipath新建的设备经过多少秒后才开始用multipathd接收设备udev的变更事件。通常multipathd都会对新设备
		重载设置一个延迟，以等待接收其初始化前发送的第一个变更事件。默认值：30
	skip_kpartx
		如果设置为yes， kpartx将不会自动在设备上创建分区。默认值：no
	ignore_new_boot_devs
		如果设置为yes，则multipath在initramfs运行时将不会创建任何列于/etc/multipath/wwids文件之外的设备。这可以
		起到避免让multipath在initramfs启动过程中创建设备的作用。默认值：no
	retrigger_tries
		该值设置了multipathd将为非黑名单却没有udev的设备上重新发送变更事件的次数。multipath总会假设没有回报wwid的设备
		均是被列入黑名单的。如果设备的确未被列入黑名单，那就意味着其在udev化的过程中超时了。这个值就用于设置当此情况发生且
		经过一段延时后，multipath将会尝试给出现这种情况的设备多少次重试发送udev的wwid回报的机会。默认值：3
	retrigger_delay
		该值便是上面属性值中所说的经过延时的时间。设置这个值的目的是为了给udev一个处理信息的间隔以使其避免处理途中超时的问题。
		默认值：10
	new_bindings_in_boot
		如果设置为yes，multipath将允许在initramfs运行时创建新的user_friendly_names绑定，否则将不会创建这个绑定。
		当不创建user_friendly_names时，其user_friendly_names值将被设备的wwid取代表示。这个设置在multipath后生效。
		默认值：no
	disable_changed_wwids
		如果设置为yes，则multipath将检查路径wwid的on change事件，如果路径的wwid变更了，则禁用对该路径的访问直到wwid变更
		回来为止。默认值：no
	remove_retries
		该值设置了multipath将尝试多少次移除在用状态的设备。每次尝试间隔1秒。默认值：0
	max_sectors_kb
		该值将统一设置所有路径设备的扇区最大字节数。默认值随设备不同而不同。
	unpriv_sgio
		如果设置为yes，则multipath将会在多路径设备创建或重载时为每一个路径设置unpriv_sgio标识。默认值：no
	ghost_delay
		设置mul.tipath创建在systemd标识为可用的影路径前等待的秒数。这可以在multipath运行硬件处理切换激活影路径前为显示其他
		已激活的路径提供准备时间。

blacklist部分
	blacklist部分用于排除multipath拓扑逻辑中的指定设备。它一般多用于排除本地磁盘或磁盘阵列的LUN控制器。它可以设置为以下内容：
	
		wwids
			设备（应该是特指存储硬件设备）的wwid(全球唯一值，过于陈旧的设备没有这个值，需要设置user_friendly_names）
		devnode
			通过正则表达式排除的设备节点
		property
			通过正则表达式排除的udev节点
		protocol
			通过正则表达式排除特定的多路径识别协议。
		device
			设备描述子段。该子段可以设置供应商描述字，以确定目标。

	多路径识别协议主要有scsi:fcp, scsi:spi, scsi:ssa, scsi:sbp, scsi:srp, scsi:iscsi, scsi:sas, scsi:adt, 
	scsi:ata, scsi:unspec, ccw, cciss, nvme和undef。对应路径所使用的协议可以通过multipathd show指令显示出来。
	格式为："%d %P"

blacklist_exceptions部分
	blacklist_exception部分用于设置blacklist中对应blacklist的例外部分。也就是说这个部分设置的子段将继续使用而
	不会因为符合blacklist中的描述而被排除。与blacklist部分相同，它同样也是可设置为以下内容：

		wwids
			设备的wwid
		devnode
			通过正则表达式排除的设备节点
		property
			通过正则表达式排除的udev节点
		protocol
			通过正则表达式排除特定的多路径识别协议。
		device
			设备描述子段。

	这个部分其实相当于白名单。
	黑白名单的处理逻辑完全不同，黑名单是只禁用名单内的设备，而白名单则是名单内以外的一切设备都禁用。
	比如在blacklist_exception部分中设置为(SCSI_IDENT_|ID_WWN)，则所有未能与SCSI_IDENT_或ID_WWN匹配的设备均会被
	禁用。一般此值只用于排除所有非多路径设备。

multipaths部分
	multipaths只能包含以下子段的内容：
		wwid
			必须指定，设备容器的索引
		alias
			可选，为多路径映射设置的一个别名

		以下属性均为可选项，不设置则表示采用默认配置或从设备直接获取：
              path_grouping_policy
              path_selector
              prio
              prio_args
              failback
              rr_weight
              flush_on_last_del
              user_friendly_names
              no_path_retry
              rr_min_io
              rr_min_io_q
              features
              reservation_key
              deferred_remove
              delay_watch_checks
              delay_wait_checks
              skip_kpartx
              max_sectors_kb
              unpriv_sgio
              ghost_delay

devices部分
	device部分只能包含以下子段内容：
		vendor
			必须指定，供应商标识
		product
			必须指定，产品标识
		revision
			可选，修订标识
		product_blacklist
			可选，该供应商下置于黑名单的产品子段
		alias_prefix
			可选，通过为user_friendly_names设置前缀来标记设备类型，以取代默认分配的“mpath”
		hardware_handler
			可选，设置设备类型对应的硬件处理器。有以下可选值：
				emc 	EMC存储阵列的硬件处理器
				rdac	LSI/Engenio/NetApp E系列RDAC存储控制器的硬件处理器
				hp_sw	Compaq/HP处于激活/待机状态的存储阵列的硬件处理器
				alua	SCSI-3 ALUA对应的硬件处理器

		以下属性均为可选项，不设置则表示采用默认配置或从设备直接获取：
              path_grouping_policy
              uid_attribute
              path_selector
              path_checker
              prio
              prio_args
              features
              failback
              rr_weight
              no_path_retry
              user_friendly_names
              rr_min_io
              rr_min_io_rq
              fast_io_fail_tmo
              dev_loss_tmo
              flush_on_last_del
              retain_attached_hw_handler
              detect_prio
              deferred_remove
              delay_watch_checks
              delay_wait_checks
              skip_kpartx
              max_sectors_kb
              unpriv_sgio
              ghost_delay

已知问题
		启用 queue_if_no_path 会导致D状态的进程挂起且当所有LUN离线时无法终止进程。建议改为使用 no_path_retry 选项。
		使用 queue_if_no_path 或 no_path_retry 可能在设置 dev_loss_tmo 执行于一个已移除设备的I/O队列时导致设备
		锁死。multipath 服务会更新dev_loss_tmo 状态以避免锁死情况发生。因此，请务必保证 no_path_retry, 
		queue_if_no_path 和 dev_loos_tmo 均已被设置。

相关参考
		udev(8), dmsetup(8) multipath(8) multipathd(8)

作者
       multipath was developed by Christophe Varoqui, <christophe.varoqui@opensvc.com> and others.



                                                              30 November 2006
